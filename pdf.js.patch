--- pdf_old.js	2017-03-09 15:28:38.000000000 +0200
+++ pdf.js	2017-03-09 19:13:56.885662100 +0200
@@ -827,7 +827,12 @@
   function getL10nData(key, args, fallback) {
     var data = gL10nData[key];
     if (!data) {
-      console.warn('#' + key + ' is undefined.');
+      ///console.warn('#' + key + ' is undefined.'); /// patched
+      // === patch start ===
+      if (Object.keys(gL10nData).length > 0) {
+        console.warn('#' + key + ' is undefined.');
+      }
+      // === patch end ===
       if (!fallback) {
         return null;
       }
@@ -12302,7 +12307,14 @@
    if (!name || !element || !(container = element.parentNode)) {
     throw new Error('Not enough parameters.');
    } else if (this.overlays[name]) {
-    throw new Error('The overlay is already registered.');
+    ///throw new Error('The overlay is already registered.'); /// patched
+    // === patch start ===
+    if (this.active !== name) {
+        this.unregister(name);
+      } else {
+        throw new Error('The overlay is already registered and active.');
+      }    
+    // === patch start ===
    }
    this.overlays[name] = {
     element: element,
@@ -12794,9 +12806,20 @@
 var DEFAULT_SCALE_DELTA = 1.1;
 var DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000;
 function configure(PDFJS) {
- PDFJS.imageResourcesPath = './images/';
- PDFJS.workerSrc = '../build/pdf.worker.js';
- PDFJS.cMapUrl = '../web/cmaps/';
+/// PDFJS.imageResourcesPath = './images/'; /// patched
+/// PDFJS.workerSrc = '../build/pdf.worker.js'; /// patched
+/// PDFJS.cMapUrl = '../web/cmaps/'; /// patched
+  // === patch start ===
+  var scriptTagContainer = document.body ||
+                           document.getElementsByTagName('head')[0];
+  var pdfjsSrc = scriptTagContainer.lastChild.src;
+  
+  if (pdfjsSrc) {
+    PDFJS.imageResourcesPath = pdfjsSrc.replace(/pdf\.js$/i, 'images/');
+    PDFJS.workerSrc = pdfjsSrc.replace(/pdf\.js$/i, 'pdf.worker.js');
+    PDFJS.cMapUrl = pdfjsSrc.replace(/pdf\.js$/i, 'cmaps/');
+  }
+  // === patch end ===
  PDFJS.cMapPacked = true;
 }
 var DefaultExernalServices = {
@@ -13508,7 +13531,12 @@
   this.pdfViewer.cleanup();
   this.pdfThumbnailViewer.cleanup();
   if (this.pdfViewer.renderer !== RendererType.SVG) {
-   this.pdfDocument.cleanup();
+   ///this.pdfDocument.cleanup(); /// patched
+   // === patch start ===
+    if (this.pdfDocument) {
+      this.pdfDocument.cleanup();
+    }   
+   // === patch start ===
   }
  },
  forceRendering: function pdfViewForceRendering() {
@@ -13624,6 +13652,9 @@
    if (!files || files.length === 0) {
     return;
    }
+   // === patch start ===
+   if(evt.target.id == PDFViewerApplication.appConfig.openFileInputName)
+   // === patch end ===
    eventBus.dispatch('fileinputchange', { fileInput: evt.target });
   });
  }
@@ -19426,7 +19457,14 @@
 if (document.readyState === 'interactive' || document.readyState === 'complete') {
  webViewerLoad();
 } else {
- document.addEventListener('DOMContentLoaded', webViewerLoad, true);
+  ///document.addEventListener('DOMContentLoaded', webViewerLoad, true); /// patched
+  // === patch start ===
+  PDFJS.webViewerLoad = function (src) {
+    if (src) DEFAULT_URL = src;
+ 
+    webViewerLoad();
+  }  
+  // === patch end ===
 }
 
 /***/ })
